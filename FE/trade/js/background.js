/* 
  TradeBackground.js - Canvas Version
  기존 DOM 기반 애니메이션을 Canvas로 변환
*/
document.addEventListener('DOMContentLoaded', () => {
    const canvas = document.getElementById('trade-background');
    if (!canvas) {
        console.error('Canvas #trade-background not found.');
        return;
    }

    const ctx = canvas.getContext('2d');
    
    // Canvas 크기 설정
    function resizeCanvas() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    }
    
    resizeCanvas();
    window.addEventListener('resize', resizeCanvas);

    // 그리드 설정
    const cols = 110;
    const rows = 70;
    const cellWidth = canvas.width / cols;
    const cellHeight = canvas.height / rows;

    const northAmericaCells = [37, 38, 39, 40, 41, 42, 147, 148, 149, 150, 151, 152, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 465, 466, 467, 468, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
            575, 576, 577, 578, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 683, 684, 685, 686, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 793, 794, 795, 796, 797, 798, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
            1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1323, 1324, 1325, 1326, 1327, 1328, 1333, 1334, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1433, 1434, 1435, 1436, 1437, 1438, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
            1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1797, 1798, 1799, 1800, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1907, 1908, 1909, 1910, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
            2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009, 2010, 2011, 2012, 2017, 2018, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2117, 2118, 2119, 2120, 2121, 2122, 2127, 2128, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2227, 2228, 2229, 2230, 2231, 2232, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2337, 2338, 2339, 2340, 2341, 2342, 2423, 2424, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454,
            2533, 2534, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2667, 2668, 2669, 2670, 2671, 2672, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2777, 2778, 2779, 2780, 2781, 2782, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999,
            3000, 3001, 3002, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438,
            3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767, 3768, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3979, 3980, 3981, 3982, 3983, 3984, 3989, 3990,
            4089, 4090, 4091, 4092, 4093, 4094, 4099, 4100, 4201, 4202, 4203, 4204, 4311, 4312, 4313, 4314, 4423, 4424, 4425, 4426, 4427, 4428,
            4533, 4534, 4535, 4536, 4537, 4538, 4647, 4648, 4757, 4758
    ];

    const southAmericaCells = [4869, 4870, 4871, 4872, 4873, 4874, 4875, 4876, 4877, 4878, 4979, 4980, 4981, 4982, 4983, 4984, 4985, 4986, 4987, 4988,
            5091, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 5209, 5210, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 5324, 5419, 5420, 5421, 5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433, 5434,
            5529, 5530, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5543, 5544, 5639, 5640, 5641, 5642, 5643, 5644, 5645, 5646, 5647, 5648, 5649, 5650, 5651, 5652, 5653, 5654, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 5760, 5761, 5762, 5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872, 5973, 5974, 5975, 5976, 5977, 5978, 5979, 5980, 5981, 5982,
            6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6193, 6194, 6195, 6196, 6197, 6198, 6199, 6200, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6413, 6414, 6415, 6416, 6417, 6418,
            6523, 6524, 6525, 6526, 6527, 6528, 6631, 6632, 6633, 6634, 6635, 6636, 6741, 6742, 6743, 6744, 6745, 6746, 6851, 6852, 6853, 6854, 6961, 6962, 6963, 6964,
            7071, 7072, 7073, 7074, 7181, 7182, 7183, 7184, 7291, 7292, 7293, 7294, 7401, 7402, 7403, 7404,
            7513, 7514, 7623, 7624
    ];

    const europeCells = [941, 942,
            1051, 1052, 1171, 1172, 1173, 1174, 1281, 1282, 1283, 1284, 1381, 1382, 1383, 1384, 1389, 1390, 1491, 1492, 1493, 1494, 1499,
            1500, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1611, 1612, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1721, 1722, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
            2027, 2028, 2029, 2030, 2035, 2036, 2037, 2038, 2039, 2040, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2137, 2138, 2139, 2140, 2145, 2146, 2147, 2148, 2149, 2150, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2255, 2256, 2257, 2258, 2259, 2260, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2365, 2366, 2367, 2368, 2369, 2370, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2471, 2472, 2473, 2474, 2477, 2478, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
            2581, 2582, 2583, 2584, 2587, 2588, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932,
            3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3349, 3350, 3351, 3352, 3357, 3358, 3361, 3362, 3363, 3364, 3459, 3460, 3461, 3462, 3467, 3468, 3471, 3472, 3473, 3474,
            3581, 3582, 3691, 3692
    ];

    const africaCells = [3791, 3792, 3793, 3794, 3795, 3796, 3799, 3800, 3901, 3902, 3903, 3904, 3905, 3906, 3909, 3910,
            4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4132, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465,
            4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4667, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685, 4686, 4687, 4688, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786, 4787, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4889, 4890, 4891, 4892, 4893, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4903, 4904, 4905, 4906, 4907, 4908, 4999,
            5000, 5001, 5002, 5003, 5004, 5005, 5006, 5007, 5008, 5009, 5010, 5011, 5012, 5013, 5014, 5015, 5016, 5017, 5018, 5115, 5116, 5117, 5118, 5119, 5120, 5121, 5122, 5123, 5124, 5125, 5126, 5225, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5445, 5446, 5447, 5448, 5449, 5450, 5451, 5452, 5453, 5454,
            5557, 5558, 5559, 5560, 5561, 5562, 5563, 5564, 5667, 5668, 5669, 5670, 5671, 5672, 5673, 5674, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5887, 5888, 5889, 5890, 5891, 5892, 5893, 5894, 5997, 5998, 5999,
            6000, 6001, 6002, 6005, 6006, 6107, 6108, 6109, 6110, 6111, 6112, 6115, 6116, 6217, 6218, 6219, 6220, 6221, 6222, 6225, 6226, 6327, 6328, 6329, 6330, 6331, 6332, 6335, 6336, 6437, 6438, 6439, 6440,
            6547, 6548, 6549, 6550
    ];

    const asiaCells = [527, 528, 637, 638, 745, 746, 747, 748, 749, 750, 855, 856, 857, 858, 859, 860, 963, 964, 965, 966, 967, 968, 969, 970,
            1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1312, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
            1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
            2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2305, 2306, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2415, 2416, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
            2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2523, 2524, 2525, 2526, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2633, 2634, 2635, 2636, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2743, 2744, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2853, 2854, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958,
            3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3181, 3182, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3291, 3292, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3401, 3402, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499,
            3500, 3501, 3502, 3503, 3504, 3505, 3506, 3511, 3512, 3585, 3586, 3587, 3588, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3615, 3616, 3619, 3620, 3695, 3696, 3697, 3698, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719, 3720, 3721, 3722, 3725, 3726, 3729, 3730, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3831, 3832, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942,
            4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4037, 4038, 4039, 4040, 4041, 4042, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4147, 4148, 4149, 4150, 4151, 4152, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4247, 4248, 4249, 4250, 4251, 4252, 4259, 4260, 4267, 4268, 4269, 4270, 4357, 4358, 4359, 4360, 4361, 4362, 4369, 4370, 4377, 4378, 4379, 4380, 4469, 4470, 4487, 4488, 4489, 4490,
            4579, 4580, 4597, 4598, 4599, 4600, 4709, 4710, 4713, 4714, 4715, 4716, 4819, 4820, 4823, 4824, 4825, 4826, 4929, 4930, 4931, 4932, 4933, 4934,
            5039, 5040, 5041, 5042, 5043, 5044, 5151, 5152, 5261, 5262
    ];

    const australiaCells = [4721, 4722, 4831, 4832, 4943, 4944, 4945, 4946,
            5053, 5054, 5055, 5056, 5163, 5164, 5273, 5274, 5377, 5378, 5379, 5380, 5383, 5384, 5487, 5488, 5489, 5490, 5493, 5494,
            5593, 5594, 5595, 5596, 5597, 5598, 5599, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716, 5811, 5812, 5813, 5814, 5815, 5816, 5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936,
            6031, 6032, 6033, 6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6141, 6142, 6143, 6144, 6145, 6146, 6147, 6148, 6149, 6150, 6151, 6152, 6153, 6154, 6155, 6156, 6251, 6252, 6253, 6254, 6259, 6260, 6261, 6262, 6263, 6264, 6361, 6362, 6363, 6364, 6369, 6370, 6371, 6372, 6373, 6374, 6479, 6480, 6481, 6482, 6489, 6490,
            6589, 6590, 6591, 6592, 6599, 6600, 6709, 6710, 6819, 6820
    ];

    // 대륙 데이터
    const continents = {
        northAmerica: {
            cells: northAmericaCells,
            color: '#39FF14',
            duration: 8000
        },
        southAmerica: {
            cells: southAmericaCells,
            color: '#00FF00',
            duration: 6000
        },
        europe: {
            cells: europeCells,
            color: '#ADFF2F',
            duration: 7500
        },
        africa: {
            cells: africaCells,
            color: '#7FFF00',
            duration: 8500
        },
        asia: {
            cells: asiaCells,
            color: '#00FF41',
            duration: 7000
        },
        australia: {
            cells: australiaCells,
            color: '#00FA9A',
            duration: 5000
        }
    };

    // 셀 상태 관리
    const cellStates = {};
    const totalCells = cols * rows;
    
    // 모든 셀 초기화
    for (let i = 1; i <= totalCells; i++) {
        cellStates[i] = {
            continent: null,
            warning: false
        };
    }

    // 대륙별 셀 설정
    Object.keys(continents).forEach(continentName => {
        const continent = continents[continentName];
        continent.cells.forEach(cellIndex => {
            if (cellIndex <= totalCells) {
                cellStates[cellIndex].continent = continentName;
            }
        });
    });

    // 코드네임 박스 관리
    const codenames = [
        "ALPHA", "BRAVO", "CHARLIE", "DELTA", "ECHO", "FOXTROT",
        "GHOST", "VIPER", "RAZOR", "PHOENIX", "SPECTRE", "HYDRA",
        "HACKER", "WARNING", "BURNER", "LOCK", "TRAP", "AVGMAX"
    ];

    const codeSnippets = [
        "kernel_panic: not syncing\nAttempted to kill init!",
        "d3crypt: f4ilur3\nreverting to backup...",
        "mem_leak detected at 0xDEADBEEF\npurging sector...",
        "sys_integrity compromised\nfirewall breach imminent"
    ];

    const codenameBoxes = [];

    function createCodenameBox() {
        const isDanger = Math.random() < 0.15;
        const box = {
            x: 10 + Math.random() * 80,
            y: 10 + Math.random() * 80,
            isDanger: isDanger,
            startTime: Date.now(),
            duration: 5000,
            id: `${codenames[Math.floor(Math.random() * codenames.length)]}-${Math.floor(100 + Math.random() * 900)}`,
            snippet: isDanger ? codeSnippets[Math.floor(Math.random() * codeSnippets.length)] : null
        };
        codenameBoxes.push(box);
    }

    // 경고 효과 관리
    const continentNames = Object.keys(continents);
    let currentWarningContinentIndex = 0;
    let lastWarningTime = 0;
    const warningDuration = 4000;

    function updateWarningEffect() {
        const now = Date.now();
        if (now - lastWarningTime > warningDuration) {
            // 이전 경고 제거
            Object.keys(cellStates).forEach(cellIndex => {
                cellStates[cellIndex].warning = false;
            });

            // 새 경고 설정
            const continentName = continentNames[currentWarningContinentIndex];
            const continent = continents[continentName];
            continent.cells.forEach(cellIndex => {
                if (cellIndex <= totalCells) {
                    cellStates[cellIndex].warning = true;
                }
            });

            currentWarningContinentIndex = (currentWarningContinentIndex + 1) % continentNames.length;
            lastWarningTime = now;
        }
    }

    // 대륙 애니메이션 함수
    function getContinentAnimation(time, continent) {
        // 기본 밝기
        let baseIntensity = 0.3;
        
        // duration이 끝날 때 2번 빠르게 깜빡임
        const cycleTime = time % continent.duration;
        const blinkStart = continent.duration - 300; // 마지막 300ms에서 깜빡임 시작
        
        if (cycleTime >= blinkStart) {
            // 마지막 600ms 동안 3번 깜빡임
            const blinkTime = cycleTime - blinkStart;
            
            // 3번 깜빡임: 0-150ms, 150-300ms
            if (blinkTime < 150 || (blinkTime >= 150 && blinkTime < 300)) {
                // 각 깜빡임은 100ms 동안 밝게
                const blinkPhase = blinkTime % 150;
                if (blinkPhase < 100) {
                    return { intensity: 1, color: continent.color }; // 강한 밝기
                } else {
                    return { intensity: 0, color: '#000' }; // 완전히 꺼짐
                }
            }
        } else {
            // 깜빡이지 않는 구간에서 천천히 밝아졌다 어두워지는 효과
            const pulseSpeed = 0.001; // 펄스 속도 (천천히)
            const pulseIntensity = 0.3; // 펄스 강도
            const pulse = Math.sin(time * pulseSpeed + continent.duration * 0.1) * pulseIntensity;
            const currentIntensity = baseIntensity + pulse;
            
            // 색상 밝기 조작
            const adjustedColor = adjustColorBrightness(continent.color, currentIntensity);
            return { intensity: currentIntensity, color: adjustedColor };
        }
        
        // 평상시에는 약한 밝기
        return { intensity: baseIntensity, color: continent.color };
    }

    // 색상 밝기 조작 함수
    function adjustColorBrightness(hexColor, intensity) {
        // hex를 RGB로 변환
        const r = parseInt(hexColor.slice(1, 3), 16);
        const g = parseInt(hexColor.slice(3, 5), 16);
        const b = parseInt(hexColor.slice(5, 7), 16);
        
        // 밝기 조정
        const adjustedR = Math.round(r * intensity);
        const adjustedG = Math.round(g * intensity);
        const adjustedB = Math.round(b * intensity);
        
        // RGB를 hex로 변환
        return `rgb(${adjustedR}, ${adjustedG}, ${adjustedB})`;
    }

    // 대륙 경고 애니메이션 함수
    function getWarningAnimation(time) {
        return Math.sin(time * 0.01) * 0.5 + 0.5; // 0~1 사이 값
    }

    function getCodenameBoxAnimation(box) {
        const elapsed = Date.now() - box.startTime;
        const totalDuration = box.duration;
        
        if (elapsed < 300) {
            // 나타나는 애니메이션
            return elapsed / 300;
        } else if (elapsed > totalDuration - 500) {
            // 사라지는 애니메이션
            return (totalDuration - elapsed) / 500;
        }
        return 1; // 완전히 보임
    }

    // 그리드 그리기
    function drawGrid() {
        ctx.fillStyle = '#000';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        const time = Date.now();

        // 모든 셀 그리기
        for (let i = 1; i <= totalCells; i++) {
            const cellState = cellStates[i];
            const cellIndex = i - 1;
            const x = (cellIndex % cols) * cellWidth;
            const y = Math.floor(cellIndex / cols) * cellHeight;
            const centerX = x + cellWidth / 2;
            const centerY = y + cellHeight / 2;
            const dotSize = Math.min(cellWidth, cellHeight) * 0.2;

            let color = '#222';
            let glow = 0;

            if (cellState.warning) {
                // 경고 효과
                const warningIntensity = getWarningAnimation(time);
                color = `rgb(${255}, ${45 + warningIntensity * 133}, ${45 + warningIntensity * 133})`;
                glow = 7 + warningIntensity * 18;
            } else if (cellState.continent) {
                // 대륙 애니메이션
                const continent = continents[cellState.continent];
                const animation = getContinentAnimation(time, continent);
                if (animation.intensity > 0.1) {
                    color = animation.color;
                    glow = 3 + animation.intensity * 8;
                }
            }

            // 점 그리기
            ctx.beginPath();
            ctx.arc(centerX, centerY, dotSize, 0, Math.PI * 2);
            ctx.fillStyle = color;
            ctx.fill();

            // 글로우 효과
            if (glow > 0) {
                ctx.shadowColor = color;
                ctx.shadowBlur = glow;
                ctx.beginPath();
                ctx.arc(centerX, centerY, dotSize, 0, Math.PI * 2);
                ctx.fill();
                ctx.shadowBlur = 0;
            }
        }
    }

    // 코드네임 박스 그리기
    function drawCodenameBoxes() {
        const time = Date.now();
        
        for (let i = codenameBoxes.length - 1; i >= 0; i--) {
            const box = codenameBoxes[i];
            const elapsed = time - box.startTime;
            
            if (elapsed > box.duration) {
                codenameBoxes.splice(i, 1);
                continue;
            }

            const alpha = getCodenameBoxAnimation(box);
            if (alpha <= 0) continue;

            const x = (box.x / 100) * canvas.width;
            const y = (box.y / 100) * canvas.height;

            ctx.save();
            ctx.globalAlpha = alpha;

            if (box.isDanger) {
                // 위험 박스
                ctx.fillStyle = 'rgba(255, 0, 0, 0.25)';
                ctx.strokeStyle = 'rgba(255, 0, 0, 0.8)';
                ctx.fillRect(x, y, 300, 80);
                ctx.strokeRect(x, y, 300, 80);

                ctx.fillStyle = '#ff0000';
                ctx.font = 'bold 16px "Courier New"';
                ctx.fillText(box.id, x + 10, y + 20);
                
                ctx.font = '14px "Courier New"';
                const lines = box.snippet.split('\n');
                lines.forEach((line, index) => {
                    ctx.fillText(line, x + 10, y + 40 + index * 16);
                });
            } else {
                // 일반 박스
                ctx.fillStyle = 'rgba(255, 107, 0, 0.2)';
                ctx.strokeStyle = 'rgba(255, 107, 0, 0.7)';
                ctx.fillRect(x, y, 150, 30);
                ctx.strokeRect(x, y, 150, 30);

                ctx.fillStyle = '#ff6b00';
                ctx.font = '16px "Courier New"';
                ctx.fillText(box.id, x + 10, y + 20);
            }

            ctx.restore();
        }
    }

    // 메인 렌더링 루프
    function render() {
        updateWarningEffect();
        drawGrid();
        drawCodenameBoxes();
        requestAnimationFrame(render);
    }

    // 시작
    render();

    // 코드네임 박스 생성 타이머
    setInterval(createCodenameBox, 2500);
}); 